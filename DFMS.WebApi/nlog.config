<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    autoReload="true"
    internalLogLevel="Info"
    internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
    </extensions>
	<variable name="duration" value="${aspnet-request-duration}ms" />
	<variable name="user" value="${aspnet-request:header=UserId}" />
	<variable name="path" value="${aspnet-request-method} ${aspnet-request-url:IncludeScheme=false:IncludeHost=false:IncludeQueryString=true}" />
	<variable name="ex" value="${onexception:${newline}}${exception:format=tostring}" />
	<variable name="apiShortLayout" value="${time} | ${message} | ${duration}${ex}" />
	<variable name="apiLayout" value="${longdate} | ${uppercase:${level}} | ${logger} | ${message} | ${user} | ${duration}${ex}" />
	<variable name="todays-path" value="${basedir}\logs\${shortdate}" />
	<variable name="consoleLayout" value="${message}${onexception:${newline}}${exception:format=tostring}" />
	<variable name="sqlCommandLayout" value="${longdate} | ${uppercase:${level}} | ${message}${onexception:${newline}}${exception:format=tostring} ${newline}" />
	<targets>
		<target name="api-file" xsi:type="File" fileName="${todays-path}\all.log" layout="${apiLayout}"/>
        <target name="error-file" xsi:type="File" fileName="${todays-path}\errors.log" layout="${apiLayout}" />
        <target name="database-file" xsi:type="File" fileName="${todays-path}\database.log" layout="${sqlCommandLayout}" />
		
		<target name="log-console-red" xsi:type="ColoredConsole" layout="${consoleLayout}">
			<highlight-row condition="true" foregroundColor="red"/>
		</target>
		<target name="log-console-yellow" xsi:type="ColoredConsole" layout="${consoleLayout}">
			<highlight-row condition="true" foregroundColor="Yellow"/>
		</target>
	    <target name="log-console-green" xsi:type="ColoredConsole" layout="${consoleLayout}">
			<highlight-row condition="true" foregroundColor="Green"/>
		</target>
		<target name="log-console-http-request" xsi:type="ColoredConsole" layout="${apiShortLayout}">
			<highlight-row condition="true" foregroundColor="Blue"/>
		</target>
		<target name="log-console-http-response" xsi:type="ColoredConsole" layout="${apiShortLayout}">
			<highlight-row condition="true" foregroundColor="Cyan"/>
		</target>
	</targets>
    <rules>
		<logger name="*" level="Info" writeTo="api-file,log-console-green">
			<filters defaultAction='Log'>
				<when condition="starts-with('${logger}', 'Microsoft.EntityFrameworkCore')" action="Ignore" />
				<when condition="starts-with('${logger}', 'Microsoft.AspNetCore')" action="Ignore" />
				<when condition="'${logger}'=='LoggingMiddleware'" action="Ignore" />
			</filters>
		</logger>
		<logger name="*" level="Warn" writeTo="log-console-yellow" />
		<logger name="*" minlevel="Error" writeTo="log-console-red,error-file" />
        <logger name="Microsoft.EntityFrameworkCore.Database.Command" writeTo="database-file">
            <filters defaultAction="Ignore">
                <when condition="starts-with('${message}', 'Executing DbCommand')" action="Log" />
            </filters>
        </logger>
		<logger name="LoggingMiddleware" minLevel="Info" writeTo="api-file,log-console-http-request">
			<filters defaultAction="Ignore">
				<when condition="starts-with('${message}', 'REQUEST') and '${aspnet-request-method}'!='OPTIONS' and not ends-with('${path}', '/api/technical/ping')" action="Log" />
			</filters>
		</logger>
		<logger name="LoggingMiddleware" minLevel="Info" writeTo="api-file,log-console-http-response">
			<filters defaultAction="Ignore">
				<when condition="starts-with('${message}', 'RESPONSE') and '${aspnet-request-method}'!='OPTIONS' and not ends-with('${path}', '/api/technical/ping')" action="Log" />
			</filters>
		</logger>
    </rules>
</nlog>