<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    autoReload="true"
    internalLogLevel="Info"
    internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
    </extensions>
    <variable name="myLayout" value="${longdate} | ${uppercase:${level}} | ${logger} | ${message}${onexception:${newline}}${exception:format=tostring}" />
	<variable name="consoleLayout" value="${message:truncate=1000}${onexception:${newline}}${exception:format=tostring}" />
	<variable name="sqlCommandLayout" value="${longdate} | ${uppercase:${level}} | ${message}${onexception:${newline}}${exception:format=tostring} ${newline}" />
	<variable name="apiRequestShortLayout" value="${pad:padding=-85:fixedLength=true:inner=${message}}${onexception:${newline}}${exception:format=tostring}" />
	<variable name="apiResponseShortLayout" value="${pad:padding=-60:fixedLength=true:inner=${message}}${onexception:${newline}}${exception:format=tostring}" />
	<variable name="apiRequestLayout" value="${longdate} | ${uppercase:${level}} | ${logger} | ${pad:padding=-85:fixedLength=true:inner=${message}}${onexception:${newline}}${exception:format=tostring}" />
	<variable name="apiResponseLayout" value="${longdate} | ${uppercase:${level}} | ${logger} | ${pad:padding=-60:fixedLength=true:inner=${message}}${onexception:${newline}}${exception:format=tostring}" />
    <targets>
        <target xsi:type="File" name="all-file" fileName="${basedir}\logs\${shortdate}\all.log" layout="${myLayout}" />
		<target xsi:type="File" name="all-request-file" fileName="${basedir}\logs\${shortdate}\all.log" layout="${apiRequestLayout}" />
		<target xsi:type="File" name="all-response-file" fileName="${basedir}\logs\${shortdate}\all.log" layout="${apiResponseLayout}" />
        <target xsi:type="File" name="error-file" fileName="${basedir\logs\${shortdate}\errors.log" layout="${myLayout}" />
        <target xsi:type="File" name="database-file" fileName="${basedir}\logs\${shortdate}\database.log" layout="${sqlCommandLayout}" />
		<target xsi:type="File" name="middleware-file" fileName="${basedir}\logs\${shortdate}\middleware.log" layout="${myLayout}" />
		<target xsi:type="ColoredConsole" name="log-console-red" layout="{myLayout}">
			<highlight-row condition="true" foregroundColor="red"/>
		</target>
		<target xsi:type="ColoredConsole" name="log-console-yellow" layout="${consoleLayout}">
			<highlight-row condition="true" foregroundColor="Yellow"/>
		</target>
	    <target xsi:type="ColoredConsole" name="log-console-green" layout="${consoleLayout}">
			<highlight-row condition="true" foregroundColor="Green"/>
		</target>
	    <target xsi:type="ColoredConsole" name="log-console-blue" layout="${consoleLayout}">
			<highlight-row condition="true" foregroundColor="Blue"/>
		</target>
		<target xsi:type="ColoredConsole" name="log-console-http-resquest" layout="${apiRequestShortLayout}">
			<highlight-row condition="true" foregroundColor="Magenta"/>
		</target>
		<target xsi:type="ColoredConsole" name="log-console-http-response" layout="${apiResponseShortLayout}">
			<highlight-row condition="true" foregroundColor="Cyan"/>
		</target>
    </targets>
    <rules>
		<logger name="*" minlevel="Error" writeTo="error-file" />
		<logger name="*" minlevel="Info" writeTo="all-file,log-console-green">
			<logger name="*" minlevel="Warn" writeTo="all-file,log-console-yellow">
				<logger name="*" minlevel="Error" writeTo="all-file,log-console-red" />
			</logger>
            <filters defaultAction='Log'>
                <when condition="starts-with('${logger}', 'Microsoft.EntityFrameworkCore')" action="Ignore" />
				<when condition="starts-with('${logger}', 'WebApiMiddlewares.LoggingMiddleware')" action="Ignore" />
            </filters>
		</logger>
        <logger name="Microsoft.EntityFrameworkCore.Database.Command" minlevel="Trace" writeTo="database-file">
            <filters defaultAction='Ignore'>
                <when condition="starts-with('${message}', 'Executing DbCommand')" action="Log" />
            </filters>
        </logger>
		<logger name="WebApiMiddlewares.LoggingMiddleware" minlevel="Trace" writeTo="all-request-file,middleware-file,log-console-http-resquest">
			<filters defaultAction='Ignore'>
				<when condition="starts-with('${message}', 'REQUEST')" action="Log" />
			</filters>
		</logger>
		<logger name="WebApiMiddlewares.LoggingMiddleware" minlevel="Trace" writeTo="all-response-file,middleware-file,log-console-http-response">
			<filters defaultAction='Ignore'>
				<when condition="starts-with('${message}', 'RESPONSE')" action="Log" />
			</filters>
		</logger>
    </rules>
</nlog>